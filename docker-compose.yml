version: "3.9"
services:
  api-postgres:
    hostname: api-postgres
    image: postgres:13.3-alpine
    platform: linux/x86_64
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: store
 #   volumes:
 #    - symfony-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5  
  grpc-server:
      build:
        context: .
        dockerfile: ./docker/grpcServer.Dockerfile
      container_name: grpc-server
      hostname: grpc-server
      platform: linux/x86_64
      restart: unless-stopped
      ports:
        - "5001:5000"
      depends_on:
        api-postgres:
          condition: service_healthy
  orchestrator:
      build:
        context: .
        dockerfile: ./docker/orchestrator.Dockerfile
      platform: linux/x86_64
      ports:
        - "8181:8181"
      depends_on:
        api-postgres:
          condition: service_healthy
      healthcheck:
        test:  wget --no-verbose --tries=1 --spider http://localhost:8181/api/v1/status/heartbeat || exit 1
        interval: 60s
        timeout: 30s
        retries: 50
      
  agent:
      build:
        context: .
        dockerfile: ./docker/agent.Dockerfile
      platform: linux/x86_64
      container_name: agent
      restart: on-failure
      depends_on:
        orchestrator:
           condition: service_healthy
  frontend:
      build:
        context: .
        dockerfile: ./docker/frontend.Dockerfile
      platform: linux/x86_64
      restart: unless-stopped
      ports:
        - "5175:5173"
      depends_on:
        - api-postgres
        - orchestrator                  


volumes:
  symfony-postgres: